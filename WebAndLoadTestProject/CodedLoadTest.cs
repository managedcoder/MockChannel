//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAndLoadTestProject
{
    using System;
    using System.Collections.Generic;
    using System.Collections.Specialized;
    using System.Configuration;
    using System.Security.Policy;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;


    public class CodedLoadTest : WebTest
    {
        string _appID;
        string _appPassword;
        string _botEndpoint;
        string _sendToConversationUrl;
        string _serviceUrl;

        public CodedLoadTest()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";

            // We have to manually load app.config for coded web tests for some reason
            ExeConfigurationFileMap configFileMap = new ExeConfigurationFileMap();
            configFileMap.ExeConfigFilename = System.Reflection.Assembly.GetExecutingAssembly().ManifestModule.Name + ".config";
            Configuration config = ConfigurationManager.OpenMappedExeConfiguration(configFileMap, ConfigurationUserLevel.None);

            _appID = config.AppSettings.Settings["AppId"].Value;
            _appPassword = config.AppSettings.Settings["AppPassword"].Value;
            _botEndpoint = config.AppSettings.Settings["BotEndpoint"].Value;
            _serviceUrl = config.AppSettings.Settings["ServiceUrl"].Value;
            _sendToConversationUrl = config.AppSettings.Settings["SendToConversationUrl"].Value;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            WebTestRequest request1 = new WebTestRequest(_sendToConversationUrl);
            request1.Method = "POST";

            StringHttpBody request1Body = new StringHttpBody();
            request1Body.ContentType = "application/json";
            request1Body.InsertByteOrderMark = false;
            request1Body.BodyString = 
            "{" +
                "\"type\":\"message\"," +
                "\"channelId\":\"emulator\"," +
                "\"conversation\":{\"id\": 1}," +
                "\"from\":{\"id\": 1000}," +
                "\"recipient\":{\"id\": 2000}," +
                "\"serviceUrl\":\"" + _serviceUrl + "\"," +
                "\"text\":\"hello\"" +
            "}";

            //request1.QueryStringParameters.Add("clientId", _appID);
            //request1.QueryStringParameters.Add("clientSecret", _appPassword);
            //request1.QueryStringParameters.Add("endpoint", _botEndpoint);
            //request1.QueryStringParameters.Add("activity", "{\"type\":\"message\",\"id\": 123456789,\"channelId\":\"emulator\",\"conversation\":{\"id\":1}," +
            //        "\"from\":{\"id\":1000},\"recipient\":{\"id\":2000},\"serviceUrl\":\"http://localhost:51753/" +
            //        "\",\"text\":\"hello\"}");

            request1.Body = request1Body;
            yield return request1;
            request1 = null;
        }
    }
}
